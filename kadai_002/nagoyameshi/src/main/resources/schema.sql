
CREATE TABLE IF NOT EXISTS users (
    user_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(200) NOT NULL,
    password VARCHAR(200) NOT NULL,
    phone_number VARCHAR(50) NOT NULL,
    user_type VARCHAR(50) NOT NULL,
    enabled BOOLEAN NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    stripe_subscription_id VARCHAR(255),
    stripe_customer_id VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS admin(
	no INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	email VARCHAR(200) NOT NULL,
	password VARCHAR(200) NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS category(
	no INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	category_name VARCHAR(100) NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS shops(
	shop_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	category_no INT NOT NULL, 
	shop_name VARCHAR(200) NOT NULL,
	image_name VARCHAR(255),
	description VARCHAR(255) NOT NULL,
	open_time TIME NOT NULL,
	close_time TIME NOT NULL,
	min_price INT NOT NULL,
	max_price INT NOT NULL,
	postal_code VARCHAR(50) NOT NULL,
	address VARCHAR(255) NOT NULL,
	phone_number VARCHAR(50) NOT NULL,
	holiday VARCHAR(255) NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY (category_no) REFERENCES category(no)
	
);

CREATE TABLE IF NOT EXISTS reservations(
	no INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	shop_id INT NOT NULL,
	user_id INT NOT NULL,
	reservation_day DATE NOT NULL,
	reservation_time TIME NOT NULL,
	reservation_persons INT NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY (user_id) REFERENCES users(user_id),
	FOREIGN KEY (shop_id) REFERENCES shops(shop_id) 
);

CREATE TABLE IF NOT EXISTS reviews(
	no INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	shop_id INT NOT NULL,
	user_id INT NOT NULL,
	rate INT NOT NULL,
	review_content VARCHAR(255) NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY (shop_id) REFERENCES shops(shop_id),
	FOREIGN KEY (user_id) REFERENCES users(user_id)
);

CREATE TABLE IF NOT EXISTS likes(
	no INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	shop_id INT NOT NULL,
	user_id INT NOT NULL,
	is_like INT NOT NULL,
	FOREIGN KEY (shop_id) REFERENCES shops(shop_id),
	FOREIGN KEY (user_id) REFERENCES users(user_id)
);

CREATE TABLE IF NOT EXISTS verification_tokens(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	user_id INT NOT NULL UNIQUE,
	token VARCHAR(255) NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(user_id) REFERENCES users(user_id)
)
